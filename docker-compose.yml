version: '3'
services:
  zookeeper:
    image: wurstmeister/zookeeper
    ports:
      - 2181:2181
    hostname: zookeeper
    networks: 
      - nsa

  kafka:
    image: wurstmeister/kafka
    command: [start-kafka.sh]
    expose:
      - 9092
    ports:
      - "9092:9092"
    networks: 
      - nsa
    environment:
      KAFKA_CREATE_TOPICS: "
                            test:1:1,
                            dataretrieval-postprocess:1:1,
                            postprocess-dataretrieval:1:1,
                            LoginSuccessMessage:1:1,
                            RegisterSuccessMessage:1:1,
                            KafkaLoginMessage:1:1,
                            KafkaRegisterMessage:1:1,
                            messagehandler-dataretrieval:1:1,
                            messagehandler-sessionmgmt:1:1,
                            sessionmgmt-messagehandler:1:1,
                            post_process:1:1,
                            login-sessionmgmt:1:1,
                            register-sessionmgmt:1:1,
                            dataretrieval-sessionmgmt:1:1,
                            postprocess-sessionmgmt:1:1,
                            sessionhistory-ui:1:1,
                            ui-sessionhistory:1:1,
                          "
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_PORT: 9092
      KAFKA_ADVERTISED_LISTENER: PLAINTEXT://kafka:9092
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_ADVERTISED_HOST_NAME: kafka
    # expose:
    #   - "9092"
    healthcheck:
      test: ["CMD", "/opt/kafka/bin/kafka-topics.sh", "--list", "--zookeeper", "zookeeper:2181"]
      interval: 30s
      timeout: 10s
      retries: 3
      # start_period: 15s

    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    depends_on:
      - zookeeper


  # data-retrieval:
  #   build: './data-retrieval'
  #   networks: 
  #     - nsa
  #   depends_on: 
  #     - kafka
  #     - zookeeper
  #   restart: unless-stopped

  api_gateway:
    build: './api_gateway'
    ports:
      - 8081:8081
    networks:
      - nsa
    depends_on:
      - kafka
  
  user_management:
    build: './user_management'
    ports:
      - 8082:8082
    networks:
      - nsa
    depends_on:
      - kafka
      - adminer

  db:
    image: mysql:5.7
    ports:
      - 3306:3306
    networks:
      - nsa
    volumes:
      - db_data:/var/lib/mysql
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: root_password
      MYSQL_DATABASE: db
      MYSQL_USER: user
      MYSQL_PASSWORD: password
  
  adminer:
    image: adminer
    restart: always
    expose:
      - 8083
    ports:
      - 8083:8083
    networks:
      - nsa
    depends_on:
      - db


  # postprocessing:
  #   build: './postprocessing'
  #   networks: 
  #     - nsa
  #   depends_on: 
  #     - kafka
  #     - zookeeper
  #     - data-retrieval
  #   restart: unless-stopped

networks: 
  nsa:

volumes:
    db_data: {}