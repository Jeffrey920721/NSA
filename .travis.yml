matrix:
  include:
    #dataRetrieval
    - language: python
      python: 3.7
      services:
        - docker
      before_install:
        # - openssl aes-256-cbc -K $encrypted_a6128dc32008_key -iv $encrypted_a6128dc32008_iv -in cloud-key.enc -out ./cloud-key -d
        - cd data-retrieval
      install:
        - pip3 install -r requirements.txt
      script:
        - python3 dataretrieval_test.py
      after_success:
        - docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD
        - export REPO=nibafna/data-retrieval
        - export TAG=latest
        - docker build -t data-retrieval .
        - docker tag data-retrieval $REPO:$TAG
        - docker push $REPO:$TAG
        - cd ../
        - chmod 600 cloud-key
        - eval "$(ssh-agent -s)"
        - ssh -o StrictHostKeyChecking=no -i cloud-key ubuntu@149.165.170.202 pwd
        - ssh -i cloud-key ubuntu@149.165.170.202 "pwd &&
	        sudo apt-get update &&
	        sudo apt-get install -y kubectl &&
	        sudo rm -rf NSA &&
	        git clone -b test_dockerize https://github.com/airavata-courses/NSA.git &&
          echo "Hey" >> test.txt"

    #userManagement
    - language: java
      jdk:
        - oraclejdk13
      before-script:
        - cd user_management
      script:
        # - mvn -Dmaven.test.skip test-compile jar:test-jar install
        - echo "Insert Test case here"
      after_success:
        - docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD
        - export REPO=nibafna/user-management
        - export TAG=latest
        - docker build -t user-management .
        - docker tag user-management $REPO:$TAG
        - docker push $REPO:$TAG
        - cd ../

    #sessionManagement
    - language: node_js
      sudo: false
      node_js: 10.16
      before_install:
        - cd session-management
        - rm -rf node_modules/
      install:
        - npm install --check-files
      script: 
        - npm test
      env:
        - SERVER_IP_ADDRESS: 149.165.170.202
      after_success:
        - docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD
        - export REPO=nibafna/session-management
        - export TAG=latest
        - docker build -t session-management .
        - docker tag session-management $REPO:$TAG
        - docker push $REPO:$TAG
        - cd ../

    #apiGateway
    - language: java
      jdk:
        - oraclejdk13
      before-script:
        - cd api_gateway
      script:
        # - mvn -Dmaven.test.skip test-compile jar:test-jar install
        - echo "Insert Test case here"
      after_success:
        - docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD
        - export REPO=nibafna/api-gateway
        - export TAG=latest
        - docker build -t api-gateway .
        - docker tag api-gateway $REPO:$TAG
        - docker push $REPO:$TAG
        - cd ../

    #user-interface
    - language: node_js
      sudo: false
      node_js: 10.16
      cache:
        directories:
          - "node_modules"
      before_install:
        - cd nwp_ui
      install:
        - travis_wait npm install --check-files
      script: 
      # - npm start
        - echo "Insert tests here- UI"
      after_success:
        - docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD
        - export REPO=nibafna/user-interface
        - export TAG=latest
        - docker build -t user-interface .
        - docker tag user-interface $REPO:$TAG
        - docker push $REPO:$TAG
        - cd ../
      
    # Post processing
    - language: python
      python: 3.7
      services:
      - docker
      before_install:
      - cd postprocessing
      install:
      - pip3 install -r requirements.txt
      script:
      - #python3 test.py
      - echo "Insert test cases here"
      after_success:
        - docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD docker.io
        - export REPO=nibafna/post-process
        - export TAG=latest
        - docker build -t post-process .
        - docker tag post-process $REPO:$TAG
        - docker push $REPO:$TAG
        - cd ../

branches:
  only:
  - test_dockerize
